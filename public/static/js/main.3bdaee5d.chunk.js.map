{"version":3,"sources":["assets/images/logo.png","api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","pages/login/login.jsx","utils/dateUtils.js","config/menuConfig.js","components/linkButton/linkButton.jsx","components/header/header.jsx","components/left-nav/left-nav.jsx","pages/home/home.jsx","pages/category/addForm.jsx","pages/category/updateForm.jsx","pages/category/category.jsx","pages/product/home.jsx","pages/product/detail.jsx","pages/product/pictureWall.jsx","pages/product/RichTextEditor.jsx","pages/product/addUpdate.jsx","pages/product/product.jsx","pages/user/UserForm.jsx","pages/user/user.jsx","pages/role/AddForm.jsx","pages/role/SetAuthForm.jsx","pages/role/role.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/notfound/NotFound.jsx","pages/admin/admin.jsx","App.jsx","index.js"],"names":["ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","BASE","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProducts","pageNum","pageSize","reqSearchProducts","searchName","searchType","reqDetailCategory","reqChangeProductStatus","productId","status","reqDeleteImg","name","reqAddProduct","pCategoryId","desc","price","detail","imgs","reqUpdateProduct","_id","reqAddRole","roleName","reqUpdateRole","role","reqAddUser","user","reqUpdateUser","reqWeather","city","jsonp","err","lives","weather","reporttime","memoryUtils","storageUtils","saveUser","store","set","getUser","removeUser","remove","Login","onFinish","values","a","console","log","success","props","history","push","msg","onFinishFailed","errorInfo","to","className","src","logo","alt","wrapperCol","span","this","Item","rules","whitespace","required","min","max","pattern","initialValue","placeholder","prefix","UserOutlined","style","color","Password","LockOutlined","htmlType","Component","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","menuList","title","key","icon","isPublic","children","LinkButton","Header","state","currentTime","now","getWeather","setState","getTime","intervalId","setInterval","getTitle","pathname","location","forEach","parent","result","find","indexOf","confirm","Modal","ExclamationCircleOutlined","content","okText","cancelText","onOk","replace","clearInterval","onClick","withRouter","LeftNav","getMenuNodes","SubMenu","Menu","map","MailOutlined","PieChartOutlined","hasAuth","cur","menus","child","getMenuNodesReduce","path","reduce","acc","element","openkey","mode","theme","selectedKeys","defaultOpenKeys","Home","AddForm","setForm","form","categorys","setFieldsValue","ref","c","Option","value","UpdateForm","note","Category","parentName","subCategorys","loading","showStatus","getCategorys","getSubCategorys","category","firstList","showAdd","showUpdate","handleCancel","resetFields","addForm","addCategory","validateFields","updateCategory","initColumns","columns","dataIndex","width","render","ArrowRightOutlined","extra","PlusOutlined","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","ProductHome","total","products","currentPageNum","getProductStatus","product","changeProductStatus","searchProducts","getProducts","list","_","newSearchName","newSearchType","parseInt","Select","onChange","margin","event","target","current","List","ProductDetail","categoryName1","categoryName2","all","goBack","ArrowLeftOutlined","fontSize","e","nanoid","dangerouslySetInnerHTML","__html","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","handlePreview","preview","originFileObj","previewImage","handleChange","fileList","getImgList","imgNameList","length","index","uid","uploadButton","accept","action","listType","onPreview","footer","React","RichTextEditor","onEditorStateChange","editorState","getTextContent","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","editorStyle","border","minHeight","padding","toolbar","inline","inDropdown","textAlign","image","uploadCallback","present","mandatory","ProductAddUpdate","options","PictureWall","productName","productDesc","productPrice","productCategory","isUpdate","validatePrice","Error","initOptions","label","isLeaf","subCategoryArr","targetOption","loadData","selectedOptions","createRef","categoryIdArr","labelCol","TextArea","autoSize","minRows","maxRows","showCount","validator","addonAfter","offset","Product","component","exact","Form","UserForm","nextProps","email","phone","role_id","roles","initialValues","visibilityToggle","User","getUsers","users","initRolesIdToName","create_time","deleteUser","userId","isShow","addOrUpdateUser","getFieldsValue","rolesIdToName","bordere","treeData","menuListToTreeDate","SetAuthForm","onCheck","checkedKeys","getMenus","disabled","checkable","defaultExpandAll","Role","showAddModal","addRole","getRoles","showSetAuthModal","showSetAuth","setAuth","selectedRole","setAuthForm","auth_name","onRow","auth_time","marginRight","rowSelection","selectedRowKeys","onSelect","record","Bar","sales","stores","update","getOptions","text","tooltip","legend","xAxis","yAxis","series","showBackground","backgroundStyle","option","NotFound","Footer","Layout","Sider","Content","Admin","background","from","Line","Pie","App","memoryUntils","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3bdaee5d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f6487143.png\";","/* \r\n  能发送异步axios请求的函数模块\r\n  封装axios库\r\n  函数的返回值是promise对象\r\n  1.优化同意处理异常\r\n*/\r\nimport axios from 'axios';\r\nimport { message } from 'antd';\r\nexport default function ajax(url,data={},type='GET'){\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        let promise;\r\n        //1.执行异步ajax请求 获取promise\r\n        if(type==='GET'){\r\n            promise = axios.get(url,{\r\n                //params的值为对象类型 对象内保存get请求指定的参数\r\n                params:data\r\n            })\r\n        }else{\r\n            promise = axios.post(url,data)\r\n        }\r\n\r\n        promise.then(response=>{\r\n            //2如果成功 执行resolve ajax函数返回成功的promise\r\n            resolve(response.data)\r\n        }).catch(error=>{\r\n            //3.如果失败则执行reject\r\n           // reject(error.message)\r\n           //中断promise链\r\n            message.error('请求出错'+error.message)\r\n        })\r\n    })\r\n}\r\n\r\n","/* \r\n  包含应用中所有接口请求函数的模块\r\n  每个函数的返回值都是promise\r\n*/\r\nimport ajax from './ajax'\r\nimport jsonp from 'jsonp'\r\nimport { message } from 'antd';\r\nconst BASE = '';\r\n//登录\r\nexport const reqLogin = (username,password) => ajax(BASE+'/login',{username,password},'POST')\r\n//获取分类列表\r\nexport const reqCategorys = (parentId) => ajax(BASE+'/manage/category/list',{parentId})\r\n//添加分类\r\nexport const reqAddCategory = (parentId,categoryName) => ajax(BASE+'/manage/category/add',{parentId,categoryName},'POST')\r\n//修改分类\r\nexport const reqUpdateCategory = (categoryId ,categoryName) => ajax(BASE+'/manage/category/Update',{categoryId ,categoryName},'POST')\r\n//获取商品列表\r\nexport const reqProducts = (pageNum,pageSize) => ajax(BASE+'/manage/product/list',{pageNum,pageSize})\r\n//搜索商品分页列表\r\nexport const reqSearchProducts = (pageNum,pageSize,searchName,searchType) => ajax(BASE+'/manage/product/search',{\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]:searchName\r\n})\r\n//获取一个分类\r\nexport const reqDetailCategory = (categoryId) => ajax(BASE+'/manage/category/info',{categoryId})\r\n//获取商品上架/下架状态\r\nexport const reqChangeProductStatus = (productId,status) => ajax(BASE+'/manage/product/updateStatus',{productId,status},'POST')\r\n//删除图片\r\nexport const reqDeleteImg = (name) => ajax(BASE+'/manage/img/delete',{name},'POST')\r\n//添加商品\r\nexport const reqAddProduct = (pCategoryId,categoryId,name,desc,price,detail,imgs) => ajax('/manage/product/add',\r\n{pCategoryId,categoryId,name,desc,price,detail,imgs},'POST')\r\n//更新商品\r\nexport const reqUpdateProduct = (_id,pCategoryId,categoryId,name,desc,price,detail,imgs) => ajax('/manage/product/update',\r\n{_id,pCategoryId,categoryId,name,desc,price,detail,imgs},'POST')\r\n//获取角色列表\r\nexport const reqGetRoles = () => ajax('/manage/role/list')\r\n//添加角色\r\nexport const reqAddRole = (roleName) => ajax('/manage/role/add',{roleName},'POST')\r\n//更新角色                    //传入的role为对象\r\nexport const reqUpdateRole = (role) => ajax('/manage/role/update',role,'POST')\r\n//请求用户\r\nexport const reqGetUsers = () => ajax('/manage/user/list')\r\n//删除用户\r\nexport const reqDeleteUser = (userId) => ajax('/manage/user/delete',{userId},'POST')\r\n//添加用户\r\nexport const reqAddUser = (user) => ajax('/manage/user/add',user,'POST')\r\n//修改用户\r\nexport const reqUpdateUser = (user) => ajax('/manage/user/update',user,'POST')\r\n/* \r\n  jsonp请求的接口请求函数\r\n*/\r\nexport const reqWeather = (city) =>{\r\n  return new Promise((resolve)=>{\r\n    const cityToCode={\r\n      '北京':110000,\r\n      '上海':310000,\r\n      '杭州':330100\r\n    };\r\n    const url = `https://restapi.amap.com/v3/weather/weatherInfo?city=${cityToCode[city]}&key=5348e4e333c889a1903e48244f69ea73`\r\n    jsonp(url,{},(err,data)=>{\r\n      //console.log('jsonp',err,data)\r\n      //如果成功\r\n      if(!err && data.status==='1'){\r\n        //console.log(data.lives[0])\r\n        const {city,weather,reporttime} = data.lives[0]\r\n        resolve( {city,weather,reporttime})\r\n      }else{\r\n        message.error('请求失败')\r\n      }\r\n    })\r\n  })\r\n\r\n}\r\n//console.log(reqWeather('北京'))","/* \r\n   用来保存一些数据数据的工具模块\r\n*/\r\nconst memoryUtils = {\r\n    user:{}, //保存当前登录的user\r\n}\r\nexport default memoryUtils","//store是一个对storeage相关api进行代码简化的库\r\nimport store from 'store'\r\n const storageUtils = {\r\n    /* \r\n      保存user\r\n    */\r\n    saveUser(user){\r\n        //localStorage.setItem('user_key',JSON.stringify(user))\r\n        store.set('user_key',user)\r\n    },\r\n   /* \r\n      读取user\r\n   */\r\n    getUser(){\r\n        //如果读取不到值会返回null\r\n        //return  JSON.parse(localStorage.getItem('user_key')||'{}')\r\n        return store.get('user_key')\r\n    },\r\n  /* \r\n      删除user\r\n  */\r\n    removeUser(){\r\n        //localStorage.removeItem('user_key')\r\n        store.remove('user_key')\r\n    }\r\n}\r\nexport default storageUtils","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Form, Input, Button,message } from 'antd';\r\nimport { UserOutlined,LockOutlined} from '@ant-design/icons';\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport { reqLogin } from '../../api';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\nimport storageUtils from '../../utils/storageUtils';\r\nexport default class Login extends Component {\r\n    onFinish = async (values) =>{\r\n        const {username,password} = values;\r\n        //使用await可以省略使用then()来指定成功/失败的回调函数\r\n        //直接将成功的值返回给response\r\n        const response = await reqLogin(username,password)\r\n        console.log(response)  \r\n        \r\n        if(response.status===0){\r\n            message.success('登陆成功')\r\n            memoryUtils.user = response.data\r\n           // console.log(memoryUtils.user)\r\n            storageUtils.saveUser(response.data)\r\n            //console.log(storageUtils.getUser())\r\n            //不需要回退\r\n            this.props.history.push('/')\r\n        }else{\r\n            message.error(response.msg)\r\n        }\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('failed',errorInfo)\r\n    }\r\n    render() {\r\n        const {user} = memoryUtils;\r\n        if(user&&user._id){\r\n            return <Redirect to='/'/>\r\n        }\r\n        return (\r\n            <div className='login'>\r\n                <header className='login-header'>\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <h1>React项目 后台管理系统</h1>\r\n                </header>\r\n                <section className='login-content'>\r\n                    <h2>用户登录</h2>\r\n                    <div>\r\n                        <Form\r\n                            name=\"basic\"\r\n                            wrapperCol={{\r\n                                span: 100,\r\n                            }}\r\n                            className='login-form'\r\n                            onFinish={this.onFinish}\r\n                            onFinishFailed={this.onFinishFailed}\r\n                        >\r\n                            <Form.Item\r\n                               /*  label=\"Username\" */\r\n                                name=\"username\"\r\n                                rules={[\r\n                                    {whitespace:true,message:'Please input your username!'},\r\n                                    { required: true,message: 'Please input your username!',},\r\n                                    { min: 4,message: '用户名至少4位' },\r\n                                    { max: 12,message: '用户名最多12位'},\r\n                                    { pattern: /^[a-zA-Z0-9_]+$/,message: '用户名必须由字母数字下划线组成'}\r\n                                ]}\r\n                                initialValue='admin'\r\n                            >\r\n                                <Input placeholder='用户名' prefix={<UserOutlined style={{color:'rgba(0,0,0,.25)'}}/>}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                               /*  label=\"Password\" */\r\n                                name=\"password\"\r\n                                /* rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your password!',\r\n                                    },\r\n                                ]} */\r\n                                rules={[\r\n                                    {whitespace:true,message:'Please input your password!'},\r\n                                    { required: true,message: 'Please input your password!',},\r\n                                    { min: 4,message: '密码至少4位' },\r\n                                    { max: 12,message: '密码最多12位'},\r\n                                    { pattern: /^[a-zA-Z0-9_]+$/,message: '用户名必须由字母数字下划线组成'}\r\n                                ]}\r\n                            >\r\n                                <Input.Password placeholder='密码' prefix={<LockOutlined style={{color:'rgba(0,0,0,.25)'}}/>}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item >\r\n                                <Button type=\"primary\" htmlType=\"submit\" className='login-form-button'>\r\n                                    登录\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default function formateDate(time) {\r\n    if (!time) return ''\r\n    let date = new Date(time)\r\n    return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n        + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","const menuList = [\r\n    {\r\n        title: '首页', // 菜单标题名称\r\n        key: '/home', // 对应的 path\r\n        icon: 'home', // 图标名称\r\n        isPublic:true\r\n    },\r\n    {\r\n        title: '商品',\r\n        key: '/products',\r\n        icon: 'appstore',\r\n        children: [ // 子菜单列表\r\n            {\r\n                title: '品类管理',\r\n                key: '/category',\r\n                icon: 'bars'\r\n            },\r\n            {\r\n                title: '商品管理',\r\n                key: '/product',\r\n                icon: 'tool'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: '用户管理',\r\n        key: '/user',\r\n        icon: 'user'\r\n    },\r\n    {\r\n        title: '角色管理',\r\n        key: '/role',\r\n        icon: 'safety',\r\n    },\r\n    {\r\n        title: '图形图表',\r\n        key: '/charts',\r\n        icon: 'area-chart',\r\n        children: [\r\n            {\r\n                title: '柱形图',\r\n                key: '/charts/bar',\r\n                icon: 'bar-chart'\r\n            },\r\n            {\r\n                title: '折线图',\r\n                key: '/charts/line',\r\n                icon: 'line-chart'\r\n            },\r\n            {\r\n                title: '饼图',\r\n                key: '/charts/pie',\r\n                icon: 'pie-chart'\r\n            },\r\n        ]\r\n    },\r\n]\r\nexport default menuList","import React, { Component } from 'react'\r\nimport './linkButton.less'\r\n/* \r\n   一个外形像链接的按钮\r\n*/\r\nexport default class LinkButton extends Component {\r\n    render() {\r\n        return (\r\n            <button {...this.props} className='link-button'></button>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom';\r\n//antd UI 组件库\r\nimport { Modal} from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nimport './header.less'\r\nimport {reqWeather} from '../../api/index'\r\nimport formateDate from '../../utils/dateUtils'\r\nimport menuList from '../../config/menuConfig';\r\n\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\n\r\nimport LinkButton from '../linkButton/linkButton';\r\nclass Header extends Component {\r\n    state = {\r\n        city:'北京',\r\n        weather:'晴',\r\n        currentTime : formateDate(Date.now())\r\n    }\r\n    getWeather = async () => {\r\n        const {weather,city} = await reqWeather('北京')\r\n       // console.log(weather)\r\n        this.setState({weather,city})\r\n    }\r\n    getTime = () => {\r\n        this.intervalId = setInterval(()=>{\r\n            const currentTime = formateDate(Date.now())\r\n            this.setState({currentTime})\r\n        },1000)\r\n    }\r\n    getTitle = (menuList) => {\r\n        //console.log('header',this.props.location.pathname)\r\n        const {pathname} = this.props.location;\r\n        let title;\r\n        menuList.forEach(parent=>{\r\n            if(!parent.children){\r\n                /* if(parent.key === pathname){\r\n                    title = parent.title\r\n                   //console.log(title)\r\n                    return\r\n                } */\r\n                if(pathname.indexOf(parent.key) === 0){\r\n                    title = parent.title\r\n                   //console.log(title)\r\n                    return\r\n                }\r\n            }else{\r\n               //const result = parent.children.find(children => pathname === children.key)\r\n               const result = parent.children.find(children => pathname.indexOf(children.key) === 0)\r\n               if(result){\r\n                   title = result.title;\r\n                   return;\r\n               }\r\n            }\r\n        })\r\n        return title \r\n    }\r\n    \r\n    confirm = ()=> {\r\n        Modal.confirm({\r\n          title: 'Confirm',\r\n          icon: <ExclamationCircleOutlined />,\r\n          content: '你确定要退出登录吗？',\r\n          okText: '确认',\r\n          cancelText: '取消',\r\n          onOk:()=>{\r\n              storageUtils.removeUser()\r\n              memoryUtils.user = {}\r\n              this.props.history.replace('/login')\r\n          }\r\n        });\r\n      }\r\n    \r\n    componentDidMount(){\r\n        this.getWeather();\r\n        this.getTime();\r\n    }\r\n    //退出登录后会卸载组件 \r\n    //卸载组件前将定时器关闭\r\n    componentWillUnmount(){\r\n        clearInterval(this.intervalId)\r\n    }\r\n    render() {\r\n        //console.log('header')\r\n        const title = this.getTitle(menuList)\r\n        const {weather,currentTime,city} = this.state\r\n        return (\r\n            <div className='header'>\r\n                <div className=\"header-top\">\r\n                    <span>欢迎,{ memoryUtils.user.username}</span>\r\n                    <LinkButton onClick={this.confirm}>退出</LinkButton>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">{title}</div>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span className='span-time'>{currentTime}</span>\r\n                        <span className=\"span-city\">{city}</span>                      \r\n                        <span className='span-weather'>{weather}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Header)","import React, { Component } from 'react'\r\nimport { Link,withRouter } from 'react-router-dom'\r\nimport { Menu } from 'antd';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\nimport {\r\n    PieChartOutlined,\r\n    MailOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport './left-nav.less'\r\nimport logo from '../../assets/images/logo.png'\r\n//引入配置\r\nimport menuList from '../../config/menuConfig'\r\n\r\nclass LeftNav extends Component {\r\n    getMenuNodes = (menuList) => {\r\n        const { SubMenu } = Menu;\r\n        return (\r\n            menuList.map(parent => {\r\n                if (!parent.children) {\r\n                    return (\r\n                        <Menu.Item key={parent.key} icon={<PieChartOutlined />}>\r\n                            <Link to={parent.key}>{parent.title}</Link>\r\n                        </Menu.Item>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <SubMenu key={parent.key} icon={<MailOutlined />} title={parent.title}>\r\n                            {\r\n                                this.getMenuNodes(parent.children)\r\n                            }\r\n                        </SubMenu>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n    \r\n    //判断当前登录用户对Item是否有权限\r\n    hasAuth = (cur) => {\r\n        const {key,isPublic} = cur;\r\n        const menus = memoryUtils.user.role.menus;\r\n        const username = memoryUtils.user.username;\r\n        if(username === 'admin' || isPublic || menus.indexOf(key)!==-1){\r\n            return true\r\n        //如果当前元素的某个子元素的key与menus中的key匹配\r\n        }else if(cur.children) {\r\n            return !! cur.children.find(child => menus.indexOf(child.key)!==-1)\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n    getMenuNodesReduce = (menuList) => {\r\n        const path =  this.props.location.pathname;\r\n        const { SubMenu } = Menu;\r\n        //console.log(menuList)\r\n        return (\r\n            menuList.reduce((acc,cur)=>{\r\n                //console.log('acc',acc)\r\n                if(this.hasAuth(cur)){\r\n                    if(!cur.children){\r\n                        acc.push((\r\n                            <Menu.Item key={cur.key} icon={<PieChartOutlined />}>\r\n                                <Link to={cur.key}>{cur.title}</Link>\r\n                            </Menu.Item>\r\n                        ))\r\n                    }else{\r\n                        const curChild = cur.children.find(element=>path.indexOf(element.key)===0)\r\n                        if (curChild){\r\n                            this.openkey=cur.key\r\n                        }\r\n                        acc.push((\r\n                            <SubMenu key={cur.key} icon={<MailOutlined />} title={cur.title}>\r\n                                {\r\n                                    this.getMenuNodesReduce(cur.children)\r\n                                }\r\n                            </SubMenu>\r\n                        ))\r\n                    }\r\n                }\r\n                return acc\r\n            },[])\r\n        )\r\n    }\r\n    /*  */\r\n    UNSAFE_componentWillMount (){\r\n        /* 在组件挂载之前调用 组件更新不调用 */\r\n        /* 手动刷新时会重新挂载组件 会在调用一次 */\r\n        this.getMenuNodesReduce(menuList)\r\n    }\r\n    render() {\r\n        //得到当前请求的路由路径\r\n        //console.log(this.props)\r\n        let path =  this.props.location.pathname\r\n        if(path.indexOf('/product') === 0){\r\n            path = '/product'\r\n        }\r\n        return (\r\n            <div  className='left-nav'>\r\n                <Link className='left-nav-header' to='/'>\r\n                    <img src={logo} alt=\"\" />\r\n                    <h2>后台系统</h2>\r\n                </Link>\r\n\r\n                <div className='left-nav-list'>\r\n                    <Menu\r\n                        mode=\"inline\"\r\n                        theme=\"dark\"\r\n                        //选中的key\r\n                        selectedKeys={[path]}\r\n                        /* 默认属性只会指定一次 在手动刷新页面时会重新指定默认属性 */\r\n                        defaultOpenKeys={[this.openkey]}\r\n                    >\r\n                        {\r\n                            this.getMenuNodesReduce(menuList)\r\n                        }\r\n                    </Menu>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n/* \r\n   withRouter高阶组件:\r\n    包装非路由组件 返回一个新的组件\r\n    新的组件向非路由组件传递三个属性:history/location/match\r\n*/\r\nexport default withRouter(LeftNav)","import React, { Component } from 'react'\r\nimport './home.less'\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className='home'>\r\n                欢迎来到后台系统\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Select,Input } from 'antd'\r\nexport default class AddForm extends Component {\r\n    componentDidMount(){\r\n        //console.log(this.form.getFieldValue('parentId'))\r\n        //console.log(this.form.getFieldValue('categoryName'))\r\n        this.props.setForm(this.form)\r\n    }\r\n    render() {\r\n        const {categorys,parentId} = this.props;\r\n        if(this.form){\r\n            this.form.setFieldsValue({\r\n                parentId\r\n            })\r\n        }\r\n        return (\r\n            <Form ref={c=>this.form = c}>\r\n                <Form.Item initialValue={parentId} name='parentId'>\r\n                    <Select>\r\n                        <Select.Option value='0'>一级分类</Select.Option>\r\n                        {\r\n                            categorys.map(element=>(\r\n                                <Select.Option value={element._id} key={element._id}>{element.name}</Select.Option>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item initialValue='' name='categoryName'\r\n                    rules={[\r\n                        {required:true,whitespace:true,message:'名称不能为空'}\r\n                    ]}\r\n                >\r\n                    <Input placeholder='请输入分类名称'/>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types' \r\nimport { Form,Input } from 'antd'\r\nexport default class UpdateForm extends Component {\r\n    static propTypes = {\r\n        categoryName:PropTypes.string,\r\n        setForm:PropTypes.func.isRequired\r\n    }\r\n    componentDidMount(){\r\n        //console.log(this.form)\r\n        console.log('updateform@')\r\n        this.props.setForm(this.form)\r\n    }\r\n    render() {\r\n        if(this.form){\r\n            this.form.setFieldsValue({\r\n                note:this.props.categoryName\r\n            })\r\n        }\r\n        return (\r\n            <Form ref={(c)=>{this.form=c}}>\r\n                <Form.Item initialValue={this.props.categoryName} name='note'\r\n                    rules={[{required:true,whitespace:true,message:'名称不能为空'}]}\r\n                >\r\n                    <Input placeholder='请输入分类名称'/>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Button, message, Modal } from 'antd'\r\nimport { PlusOutlined, ArrowRightOutlined } from '@ant-design/icons'\r\nimport LinkButton from '../../components/linkButton/linkButton';\r\nimport { reqCategorys } from '../../api';\r\nimport AddForm from './addForm';\r\nimport UpdateForm from './updateForm';\r\nimport { reqUpdateCategory, reqAddCategory } from '../../api';\r\nexport default class Category extends Component {\r\n    state = {\r\n        //dataSource:[],\r\n        parentId: '0', // parentId用于标识显示哪一级列表\r\n        parentName: '',\r\n        categorys: [],\r\n        subCategorys: [],\r\n        loading: false,\r\n        showStatus: 0\r\n    }\r\n\r\n    //该方法用于发送ajax请求 获取商品数据\r\n    getCategorys = async (parentId) => {\r\n        this.setState({ loading: true })\r\n        //const { parentId } = this.state\r\n        parentId = parentId || this.state.parentId\r\n        const response = await reqCategorys(parentId);\r\n        if (response.status === 0) {\r\n            //取出分类数组 可能是一级 也可能是二级\r\n            if (parentId === '0') {\r\n                this.setState({ categorys: response.data, loading: false })\r\n            } else {\r\n                this.setState({ subCategorys: response.data, loading: false })\r\n            }\r\n        } else {\r\n            message.error('请求商品失败')\r\n        }\r\n    }\r\n\r\n    getSubCategorys = (category) => {\r\n        this.setState({ parentId: category._id, parentName: category.name }, () => {\r\n            //状态更新并调用render()后调用此回调函数\r\n            this.getCategorys()\r\n        })\r\n    }\r\n    firstList = () => {\r\n        this.setState({\r\n            parentId: '0',\r\n            parentName: '',\r\n            subCategorys: []\r\n        })\r\n\r\n    }\r\n    showAdd = () => {\r\n        this.setState({ showStatus: 1 })\r\n    }\r\n    showUpdate = (category) => {\r\n        this.category = category\r\n        this.setState({ showStatus: 2 })\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({ showStatus: 0 })\r\n        this.form && this.form.resetFields()\r\n        this.addForm && this.addForm.resetFields()\r\n    }\r\n    addCategory = async () => {\r\n        /*  const parentId = this.addForm.getFieldValue('parentId')\r\n         const categoryName = this.addForm.getFieldValue('categoryName')\r\n         const result = await reqAddCategory(parentId, categoryName)\r\n         if (result.status === 0) {\r\n             if (parentId === this.state.parentId) {\r\n                 this.getCategorys()\r\n             } else if (parentId === '0') {\r\n                 this.getCategorys('0')\r\n             }\r\n         }\r\n         this.addForm.resetFields()\r\n         this.setState({ showStatus: 0 })\r\n  */\r\n\r\n        this.addForm.validateFields().then(async (values) => {\r\n            //const parentId = this.addForm.getFieldValue('parentId')\r\n           // const categoryName = this.addForm.getFieldValue('categoryName')\r\n            const parentId = values.parentId;\r\n            const categoryName = values.categoryName;\r\n            const result = await reqAddCategory(parentId, categoryName)\r\n            if (result.status === 0) {\r\n                if (parentId === this.state.parentId) {\r\n                    this.getCategorys()\r\n                } else if (parentId === '0') {\r\n                    this.getCategorys('0')\r\n                }\r\n            }\r\n            this.addForm.resetFields()\r\n            this.setState({ showStatus: 0 })\r\n        })\r\n\r\n    }\r\n    updateCategory = async () => {\r\n        /*   const categoryId = this.category._id\r\n          const categoryName = this.form.getFieldValue('note')\r\n          const result = await reqUpdateCategory(categoryId,categoryName)\r\n          if(result.status===0){\r\n              this.getCategorys()\r\n          }\r\n          //this.form.resetFields()\r\n          this.setState({showStatus:0}) */\r\n        this.form.validateFields().then(async (values) => {\r\n            //console.log(values)\r\n            const categoryId = this.category._id\r\n            const categoryName = values.note\r\n            const result = await reqUpdateCategory(categoryId, categoryName)\r\n            if (result.status === 0) {\r\n                this.getCategorys()\r\n            }\r\n            //this.form.resetFields()\r\n            this.setState({ showStatus: 0 })\r\n        })\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.initColumns();\r\n        this.getCategorys();\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '操作',\r\n                width: '30%',\r\n                render: (category) => (\r\n                    <span>\r\n                        <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\r\n                        {this.state.parentId === '0' ? <LinkButton onClick={() => this.getSubCategorys(category)}>查看子分类</LinkButton> : ''}\r\n                    </span>\r\n                )\r\n            },\r\n        ];\r\n    }\r\n    render() {\r\n        const { categorys, subCategorys, parentId, loading, parentName, showStatus } = this.state\r\n        this.category = this.category || {}\r\n        const title = parentId === '0' ? '一级分类列表' : (\r\n            <span>\r\n                <LinkButton onClick={this.firstList}>一级分类列表</LinkButton>\r\n                <ArrowRightOutlined />&nbsp;\r\n                <span>{parentName}</span>\r\n            </span>\r\n        );\r\n        const extra = (\r\n            <Button type='primary' onClick={this.showAdd}>\r\n                <PlusOutlined />\r\n                添加\r\n            </Button>\r\n        )\r\n\r\n        return (\r\n            <Card title={title} extra={extra} /* style={{position:'none !important'}} */>\r\n                <Table bordered rowKey='_id' dataSource={parentId === '0' ? categorys : subCategorys} columns={this.columns}\r\n                    loading={loading}\r\n                    pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n                />\r\n                <Modal title=\"添加分类\" visible={showStatus === 1} onOk={this.addCategory} onCancel={this.handleCancel}>\r\n                    <AddForm setForm={form => this.addForm = form} categorys={categorys} parentId={parentId}></AddForm>\r\n                </Modal>\r\n                <Modal title=\"更新分类\" visible={showStatus === 2} onOk={this.updateCategory} onCancel={this.handleCancel}>\r\n                    <UpdateForm categoryName={this.category.name} setForm={form => { this.form = form }}></UpdateForm>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Select, Input, Button, Table, message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport LinkButton from '../../components/linkButton/linkButton';\r\nimport { reqProducts, reqSearchProducts, reqChangeProductStatus } from '../../api';\r\nexport default class ProductHome extends Component {\r\n    state = {\r\n        total: 0,\r\n        products: [],\r\n        loading: false,\r\n        searchName: '',\r\n        searchType: 'productName',\r\n        currentPageNum: 1\r\n    }\r\n    getProductStatus = () => {\r\n\r\n    }\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '商品名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '商品描述',\r\n                dataIndex: 'desc',\r\n                key: 'desc',\r\n            },\r\n            {\r\n                title: '价格',\r\n                dataIndex: 'price',\r\n                key: 'price',\r\n                render: (price) => '￥' + price\r\n            },\r\n            {\r\n                title: '状态',\r\n                //dataIndex: 'status',\r\n                key: 'status',\r\n                render: (product) => {\r\n                    const { status, _id } = product;\r\n                    return (\r\n                        <span>\r\n                            <Button type='primary' onClick={this.changeProductStatus(_id, status === 1 ? 2 : 1)}>{status === 1 ? '下架' : '上架'}</Button><br />\r\n                            <span>{status === 1 ? '在售' : '已下架'}</span>\r\n                        </span>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'address',\r\n                render: (product) => {\r\n                    //console.log(this)\r\n                    const {currentPageNum,searchName,searchType} = this.state\r\n                    return (\r\n                        <span>\r\n                            <LinkButton onClick={() => this.props.history.push('/product/detail', { product })}>详情</LinkButton>\r\n                            <LinkButton onClick={() => this.props.history.push('/product/addupdate', { product, currentPageNum/* :this.state.currentPageNum */, searchName, searchType })}>修改</LinkButton>\r\n                        </span>\r\n                    )\r\n                }\r\n            },\r\n        ];\r\n    }\r\n    //更新商品上架/下架状态\r\n    changeProductStatus = (productId, status) => {\r\n        return async () => {\r\n            const result = await reqChangeProductStatus(productId, status)\r\n            // console.log(result)\r\n            if (result.status === 0) {\r\n                const { searchName, currentPageNum } = this.state;\r\n                searchName ? this.searchProducts(currentPageNum) : this.getProducts(currentPageNum);\r\n                message.success('商品更新成功')\r\n\r\n            }\r\n        }\r\n    }\r\n    //获取指定商品分页列表\r\n    getProducts = async (pageNum) => {\r\n        //  console.log(pageNum)\r\n        this.setState({ loading: true })\r\n        const result = await reqProducts(pageNum, 3)\r\n        if (result.status === 0) {\r\n            const { total, list } = result.data;\r\n            this.setState({ total, products: list, loading: false, currentPageNum: pageNum })\r\n        }\r\n    }\r\n    searchProducts = async (pageNum,_,searchName,searchType) => {\r\n        //console.log(pageNum,typeof pageNum)\r\n        /* if ((typeof pageNum) != 'Number') {\r\n            pageNum = 1\r\n        } */\r\n       // pageNum = pageNum || 1\r\n        this.setState({ loading: true })\r\n        //let { searchName, searchType } = this.state;\r\n        const newSearchName = searchName || this.state.searchName;\r\n        const newSearchType = searchType || this.state.searchType\r\n       // const result = await reqSearchProducts(pageNum, 3, searchName, searchType)\r\n        const result = await reqSearchProducts(pageNum, 3, newSearchName, newSearchType)\r\n        //console.log(result)\r\n        if (result.status === 0) {\r\n            const { total, list } = result.data;\r\n            this.setState({ total, products: list, loading: false,currentPageNum:pageNum,\r\n                searchName:newSearchName,\r\n                searchType:newSearchType\r\n            })\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        this.initColumns()\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.location.state) {\r\n            //console.log(this.props.location.state)\r\n            const { currentPageNum,searchName,searchType,total} = this.props.location.state\r\n            //修改商品&&搜索状态\r\n            if (searchName&&currentPageNum) {\r\n                this.searchProducts(currentPageNum,'',searchName,searchType)\r\n            //修改商品&&非搜索状态\r\n            }else if(currentPageNum){\r\n                this.getProducts(currentPageNum)\r\n            //添加商品\r\n            }else{\r\n                //跳转到最后一页\r\n                //console.log(total)\r\n                this.getProducts(parseInt((total+1)/3)+1)\r\n            }\r\n        } else {\r\n            //console.log(1)\r\n            this.getProducts(1)\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { Option } = Select;\r\n        const { products, total, loading, searchType, searchName } = this.state\r\n        const title = (\r\n            <span>\r\n                <Select\r\n                    //受控组件\r\n                    //组件状态实时更新\r\n                    value={searchType}\r\n                    onChange={(value) => this.setState({ searchType: value })}\r\n                >\r\n                    <Option value='productName'>按名称搜索</Option>\r\n                    <Option value='productDesc'>按描述搜索</Option>\r\n                </Select>\r\n                <Input placeholder='关键字' style={{ width: 150, margin: '0 15px' }}\r\n                    onChange={(event) => { this.setState({ searchName: event.target.value }) }}\r\n                ></Input>\r\n                <Button type='primary' onClick={()=>this.searchProducts(1)}>搜索</Button>\r\n            </span>\r\n        )\r\n        const extra = (\r\n            <Button type='primary' onClick={() => this.props.history.push('/product/addupdate',{total})}>\r\n                <PlusOutlined />\r\n                添加\r\n            </Button>\r\n        )\r\n        return (\r\n            //<Card title={title} extra={extra}></Card>    \r\n            <Card title={title} extra={extra} style={{ width: '100%' }}>\r\n                <Table dataSource={products} columns={this.columns} bordered\r\n                    rowKey='_id' loading={loading}\r\n                    pagination={{\r\n                        defaultPageSize: 3,\r\n                        total,\r\n                        showQuickJumper: true,\r\n                        onChange: searchName ? this.searchProducts : this.getProducts,\r\n                        current: this.state.currentPageNum\r\n                    }}\r\n                >\r\n                </Table>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, List } from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport {nanoid} from 'nanoid'\r\nimport LinkButton from '../../components/linkButton/linkButton';\r\nimport { reqDetailCategory } from '../../api';\r\nconst {Item} = List;\r\nexport default class ProductDetail extends Component {\r\n    state = {\r\n        categoryName1:'',  //所属一级分类名字\r\n        categoryName2:''  //所属二级分类名字\r\n    }\r\n    //点击\"详情\" 显示detail路由 组件挂载\r\n    async componentWillMount(){\r\n        //console.log('DidMount') \r\n        //显示所属分类\r\n        const {pCategoryId,categoryId} = this.props.location.state.product;\r\n        if(pCategoryId === '0'){\r\n            const result = await reqDetailCategory(categoryId);\r\n            if(result.status === 0){\r\n                this.setState({categoryName1:result.data.name})\r\n            }\r\n        }else{\r\n            const result = await Promise.all([reqDetailCategory(pCategoryId),reqDetailCategory(categoryId)])\r\n            if(result[0].status=== 0 || result[1].status === 0){\r\n                this.setState({\r\n                    categoryName1:result[0].data.name,\r\n                    categoryName2:result[1].data.name\r\n                })\r\n            }\r\n        }\r\n    }\r\n    //点击\"返回\" 路由组件卸载\r\n   /*  componentWillUnmount(){\r\n    } */\r\n    render() {\r\n        const {product} = this.props.location.state;\r\n        const {name,desc,price,imgs,detail} = product\r\n        const {categoryName1,categoryName2} = this.state\r\n        const title = (\r\n            <span>\r\n                <LinkButton onClick={()=>this.props.history.goBack()}>\r\n                <ArrowLeftOutlined style={{color:\"#1DA57A\",fontSize:20}}/>\r\n                </LinkButton>&nbsp;\r\n                <span>商品详情</span>\r\n            </span >\r\n        )\r\n        return (\r\n            <Card title={title} className='product-detail'>\r\n                <List bordered>\r\n                    <Item className='item'>\r\n                        <span className='left'>商品名称:</span>\r\n                        <span className='right'>{name}</span>\r\n                    </Item>\r\n                    <Item className='item'>\r\n                        <span className='left'>商品描述:</span>\r\n                        <span className='right'>{desc}</span>\r\n                    </Item>\r\n                    <Item className='item'>\r\n                        <span className='left'>商品价格:</span>\r\n                        <span className='right'>{price}</span>\r\n                    </Item>\r\n                    <Item className='item'>\r\n                        <span className='left'>所属分类:</span>\r\n                        <span className='right'>{categoryName1}{categoryName2?'-->'+categoryName2:''}</span>\r\n                    </Item>\r\n                    <Item className='item'>\r\n                        <span className='left'>商品图片:</span>\r\n                        <span className='right'>\r\n                            {\r\n                                imgs.map(e=>(\r\n                                    <img className='product-img' src={'http://localhost:5000/upload/'+e} alt='' key={nanoid()}/>\r\n                                ))\r\n                            }\r\n                        </span>\r\n                    </Item>\r\n                    <Item className='item'>\r\n                        <span className='left'>商品详情:</span>\r\n                        <span className='right' dangerouslySetInnerHTML={{__html:detail}}></span>\r\n                    </Item>\r\n                </List>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import { Upload, Modal, message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { reqDeleteImg } from '../../api'\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nexport default class PicturesWall extends React.Component {\r\n    static propTypes = {\r\n        imgNameList:PropTypes.array\r\n    }\r\n    //初始化状态\r\n    constructor(props) {\r\n        //props就是this.props\r\n        super(props)\r\n        let fileList = [];\r\n        if (props.imgNameList && props.imgNameList.length > 0) {\r\n            fileList = props.imgNameList.map((element, index) => ({\r\n                uid: -index, //每个file有自己唯一的id\r\n                name: element, \r\n                status: 'done',  //图片的状态 \r\n                url: 'http://localhost:5000/upload' + element,//图片地址--->用于获取图片\r\n            }))\r\n        }\r\n       //注意:在构造器中不能使用setState初始化状态\r\n        this.state={\r\n            previewVisible: false, \r\n            previewImage: '',  \r\n            fileList\r\n        }\r\n    }\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n        });\r\n    };\r\n\r\n    handleChange = async ({ file, fileList }) => {\r\n        //fileList表示所有已上传的图片数组\r\n        //file 表示当前上传的图片\r\n        //一旦上传成功\r\n        //console.log(file.status)\r\n        if (file.status === 'done') {\r\n            // console.log(file)\r\n            const result = file.response //{status:0, data:{name:'xx',url:\"http://localhost:5000/upload/image-1627103673828.png\"}}\r\n            if (result.status === 0) {\r\n                // console.log('@@@')\r\n                message.success('上传图片成功')\r\n                const { name, url } = result.data;\r\n                //  file = fileList[fileList.length-1]\r\n                file.name = name;\r\n                file.url = url\r\n            } else {\r\n                message.error('上传图片失败')\r\n            }\r\n        } else if (file.status === 'removed') {\r\n            console.log(file.name)\r\n            const result = await reqDeleteImg(file.name);\r\n            if (result.status === 0) { message.success('删除图片成功') }\r\n        }\r\n        // console.log(fileList,file)\r\n        this.setState({ fileList })\r\n    };\r\n    //定义一个用于获取图片列表的方法\r\n    getImgList = () => {\r\n        return this.state.fileList.map(element => (element.name))\r\n    }\r\n    render() {\r\n        const { previewVisible, previewImage, fileList } = this.state;\r\n        const uploadButton = (\r\n            <div>\r\n                <PlusOutlined />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"clearfix\">\r\n                <Upload\r\n                    accept='image/*' //只接收图片\r\n                    action=\"/manage/img/upload\" /* 图片上传接口地址 */\r\n                    name='image'  /* http请求的请求参数名，而参数值就是文件本身 */\r\n                    listType=\"picture-card\" //图片的显示方式\r\n                    fileList={fileList}\r\n                    onPreview={this.handlePreview} //绑定监听 点击后可显示大图\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {fileList.length >= 8 ? null : uploadButton} {/* 图片大于8张后UpLoad消失 */}\r\n                </Upload>\r\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { EditorState, convertToRaw,ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nexport default class RichTextEditor extends Component {\r\n   /*  state = {\r\n        editorState: EditorState.createEmpty() //初始化:创建一个没有内容的编辑对象\r\n    } */\r\n    static propTypes = {\r\n        detail:PropTypes.string\r\n    }\r\n    constructor(props){\r\n        super(props)\r\n        //console.log(props)\r\n        //console.log(htmlToDraft(props.detail))\r\n        if(props.detail){\r\n            const contentBlock = htmlToDraft(props.detail);\r\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            const editorState = EditorState.createWithContent(contentState);\r\n            this.state = {\r\n                editorState:editorState\r\n            }\r\n        }else{\r\n            //如果没有传入初始属性 则创建一个没有内容的编辑对象\r\n            this.state = {\r\n                editorState:EditorState.createEmpty()\r\n            }\r\n        }\r\n        \r\n    }\r\n    //输入过程实时调用该方法--->受控组件\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n    //定义方法用于获取文本内容\r\n    getTextContent = () => {\r\n        const {editorState} = this.state;\r\n        return draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n    }\r\n    uploadImageCallBack = (file) =>{\r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open('POST', '/manage/img/upload');  //指定服务器地址\r\n            const data = new FormData();\r\n            data.append('image', file);  //指定post请求参数\r\n            xhr.send(data);\r\n            //绑定成功的监听\r\n            xhr.addEventListener('load', () => {\r\n              const response = JSON.parse(xhr.responseText); //将JSON解析为JavaScript的值/对象\r\n              const url = response.data.url //得到图片的url\r\n              resolve({data: {link: url}})\r\n            });\r\n            //绑定失败的监听\r\n            xhr.addEventListener('error', () => {\r\n              const error = JSON.parse(xhr.responseText);\r\n              reject(error);\r\n            });\r\n          }\r\n        );\r\n      }\r\n    render() {\r\n        const { editorState } = this.state;\r\n        return (\r\n            <Editor\r\n                editorState={editorState}\r\n                editorStyle={{ border: '1px black solid', minHeight: '200px', padding: '0 10px' }}\r\n                onEditorStateChange={this.onEditorStateChange}//绑定监听:实时更新state，并重新渲染界面\r\n                toolbar={{\r\n                    inline: { inDropdown: true },\r\n                    list: { inDropdown: true },\r\n                    textAlign: { inDropdown: true },\r\n                    link: { inDropdown: true },\r\n                    history: { inDropdown: true },\r\n                    image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Card, Form, Input, Cascader, Button, message } from 'antd';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\nimport LinkButton from '../../components/linkButton/linkButton';\r\nimport { reqCategorys, reqAddProduct, reqUpdateProduct} from '../../api';\r\nimport PictureWall from './pictureWall';\r\nimport RichTextEditor from './RichTextEditor';\r\nexport default class ProductAddUpdate extends Component {\r\n    state = {\r\n        options: []\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n        this.PictureWall = React.createRef() //创建容器对象\r\n        this.RichTextEditor = React.createRef()\r\n        //console.log(this.props.location.state)\r\n    }\r\n    //values为对象，其中包括各个Item的值\r\n    onFinish = async (values) => {\r\n        const imgs = this.PictureWall.current.getImgList()\r\n        const detail = this.RichTextEditor.current.getTextContent()\r\n        //  console.log(imgs,detail,values) \r\n        //reqAddProduct = (pCategoryId,categoryId,name,desc,price,detail,imgs)\r\n        /* categoryId,\r\n         [\"image-1627115727929.png\"] \"<p>美的空调 你值得拥有</p>\\n\" \r\n         {productName: \"美的\", productDesc: \"美的空调 节能又不冷\", productPrice: \"998\", productCategory: Array(2)}\r\n        */\r\n         //console.log(this.props.location.state)\r\n        const { productName, productDesc, productPrice, productCategory } = values;\r\n        if (this.isUpdate) {\r\n            const {currentPageNum,searchName,searchType} = this.props.location.state;\r\n            const result = await reqUpdateProduct(this.product._id,productCategory[0], productCategory[1], productName, productDesc,\r\n                productPrice, detail, imgs\r\n            )\r\n            if(result.status === 0) {\r\n                message.success('修改商品成功')\r\n            }\r\n            this.props.history.push('/product',{currentPageNum,searchName,searchType})\r\n        } else {\r\n           // console.log('add@@@')\r\n            const {searchName,searchType,total} = this.props.location.state\r\n            const result = await reqAddProduct(productCategory[0], productCategory[1], productName, productDesc,\r\n                productPrice, detail, imgs\r\n            )\r\n            //console.log(result)\r\n            if (result.status === 0) {\r\n               // console.log('add@@@')\r\n                message.success('添加商品成功')\r\n                this.props.history.push('/product',{searchName,searchType,total})\r\n            }\r\n        }\r\n        \r\n    }\r\n    validatePrice = (_, value) => {\r\n        if (value * 1 < 0) {\r\n            return Promise.reject(new Error('价格必须大于0'))\r\n\r\n        } else {\r\n            return Promise.resolve()\r\n        }\r\n    }\r\n    initOptions = async (categorys) => {\r\n        //categorys为分类列表\r\n        const options = categorys.map(element => ({ value: element._id, label: element.name, isLeaf: false }))\r\n        const { isUpdate, product } = this;\r\n        //如果是在修改商品信息\r\n        if (isUpdate) {\r\n            const { pCategoryId } = product;\r\n            //如果存在二级分类\r\n            if (pCategoryId !== '0') {\r\n                const subCategoryArr = await reqCategorys(pCategoryId)\r\n                const targetOption = options.find(element => element.value === pCategoryId);\r\n                //console.log(targetOption)\r\n                if (subCategoryArr.status === 0) {\r\n                    targetOption.children = subCategoryArr.data.map(element => ({\r\n                        label: element.name,\r\n                        value: element._id,\r\n                        isLeaf: true\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n        this.setState({ options })\r\n    }\r\n    loadData = async (selectedOptions) => {\r\n        const targetOption = selectedOptions[0];//targetOption表示选择的上一级option\r\n        targetOption.loading = true;\r\n        const subCategorys = await this.getCategorys(targetOption.value)\r\n        //如果存在二级列表 则显示二级列表\r\n        if (subCategorys && subCategorys.length > 0) {\r\n            targetOption.loading = false;\r\n            targetOption.children = subCategorys.map(element => ({\r\n                label: element.name,\r\n                value: element._id,\r\n                isLeaf: true\r\n            }))\r\n            //如果不存在二级列表 \r\n        } else {\r\n            targetOption.loading = false;\r\n            targetOption.isLeaf = true\r\n        }\r\n        //虚假更新状态以调用render更新界面\r\n        this.setState({ options: [...this.state.options] })\r\n    };\r\n    //异步获取一级分类列表和二级分类列表\r\n    /*  \r\n         async函数的返回值是一个新的promise ，promise的结果和值有async函数决定\r\n             规则和Promise.then()返回的一样\r\n     */\r\n    getCategorys = async (parentId) => {\r\n        const result = await reqCategorys(parentId)\r\n        if (result.status === 0) {\r\n            //如果是一级分类列表\r\n            if (parentId === '0') {\r\n                this.initOptions(result.data)\r\n            } else {\r\n                return result.data\r\n            }\r\n        }\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        //通过逻辑运算 防止product为undefined时报错\r\n        // const product = this.props.location.state.product || {};\r\n        if (this.props.location.state&&this.props.location.state.product) {\r\n            //console.log(this.props.location.state)\r\n            this.product = this.props.location.state.product;\r\n            //this.update用于标记时添加商品还是更新商品\r\n            this.isUpdate = true\r\n        } else {\r\n            // this.isUpdate = !!{};\r\n            this.product = {}\r\n            this.isUpdate=false\r\n        }\r\n     //   this.isUpdate = !!this.props.location.state\r\n    }\r\n    componentDidMount() {\r\n        this.getCategorys('0')\r\n        //console.log(this.product)\r\n\r\n        /*  \r\n          this.product：\r\n        {\r\n             categoryId: \"5fc74b650dd9b10798413162\"\r\n             desc: \"????????????????????????X390???T490???????????? ????????????????????????9\"\r\n             detail: \"<p><span style=\\\"color: rgb(228,57,60);background-color: rgb(255,255,255);font-size: 12px;\\\">?????????????????????????????????????????????????????????????????????????????????office??????????????????????????????????????????</span></p>\\n<p><span style=\\\"color: rgb(102,102,102);background-color: rgb(255,255,255);font-size: 16px;\\\">?????????Lenovo?????????V110 15.6????????????????????????????????????????????????????????? ?????????E2-9010/4G/128G????????? 2G?????? ?????</span></p>\\n<p></p>\\n\"\r\n             imgs: [\"1578588737108-index.jpg\"]\r\n             name: \"??????ThinkPad ???4809\"\r\n             pCategoryId: \"5e12b8bce31bb727e4b0e348\"\r\n             price: 6300\r\n             status: 2\r\n             __v: 0\r\n             _id: \"5e12b97de31bb727e4b0e349\"\r\n \r\n         } */\r\n    }\r\n    render() {\r\n        const { product } = this;\r\n        const { categoryId, pCategoryId } = product;\r\n        const categoryIdArr = [];\r\n        if (pCategoryId) {\r\n            categoryIdArr.push(pCategoryId, categoryId)\r\n        }\r\n        const title = (\r\n            <span>\r\n                <LinkButton onClick={() => this.props.history.goBack()}>\r\n                    <ArrowLeftOutlined style={{ color: \"#1DA57A\", fontSize: 20 }} />\r\n                </LinkButton>&nbsp;\r\n                <span>{this.isUpdate ? '修改商品' : '添加商品'}</span>\r\n            </span >\r\n        )\r\n        return (\r\n            <Card title={title}>\r\n                <Form\r\n                    labelCol={{ span: 2 }} //左侧label的宽度\r\n                    wrapperCol={{ span: 8 }} //指定右侧包裹的宽度\r\n                    //ref={c => this.form = c}\r\n                    onFinish={this.onFinish} //onFinish指定的回调会在表单通过验证提交后调用\r\n                >\r\n                    <Form.Item label='商品名称' name='productName'\r\n                        initialValue={product.name}\r\n                        rules={[\r\n                            { required: true, whitespace: true, message: '必须输入商品名称' }\r\n                        ]}\r\n                    >\r\n                        <Input placeholder='请输入商品名称' />\r\n                    </Form.Item>\r\n                    <Form.Item label='商品描述' name='productDesc'\r\n                        initialValue={product.desc}\r\n                        rules={[\r\n                            { required: true, whitespace: true, message: '必须输入商品描述' }\r\n                        ]}\r\n                    >\r\n                        <Input.TextArea placeholder='请输入商品描述' autoSize={{ minRows: 2, maxRows: 6 }} showCount />\r\n                    </Form.Item>\r\n                    <Form.Item label='商品价格' name='productPrice'\r\n                        initialValue={product.price}\r\n                        rules={\r\n                            this.isUpdate ? [{ validator: this.validatePrice }] : [\r\n                                { required: true, whitespace: true, message: '必须输入商品价格' },\r\n                                { validator: this.validatePrice }\r\n                            ]}\r\n                    >\r\n                        <Input type='number' placeholder='请输入商品价格' addonAfter='元'/* 指定后缀 */ />\r\n                    </Form.Item>\r\n                    <Form.Item label='商品分类' name='productCategory'\r\n                        initialValue={categoryIdArr}\r\n                    >\r\n                        <Cascader\r\n                            placeholder='指定商品分类'\r\n                            options={this.state.options}  //指定需要显示的列表数据\r\n                            loadData={this.loadData}  //指定当选择某个列表项加载下一级列表的回调\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item label='商品图片'>\r\n                        <PictureWall ref={this.PictureWall /* 将组件对象保存在容器中 */}\r\n                            imgNameList={this.product.imgs}\r\n                        >\r\n                        </PictureWall>\r\n                    </Form.Item>\r\n                    <Form.Item label='商品详情'\r\n                        labelCol={{\r\n                            span: 2\r\n                        }}\r\n                        wrapperCol={{\r\n                            span: 20,\r\n                        }}\r\n                    >\r\n                        <RichTextEditor ref={this.RichTextEditor}\r\n                            detail={this.product.detail}\r\n                        >\r\n                        </RichTextEditor>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            span: 8,\r\n                            offset: 4\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">{/* 必须指定 htmlType=\"submit\"才能配合onFinish使用*/}\r\n                            提交\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Switch,Route ,Redirect} from 'react-router-dom'\r\nimport ProductHome from './home';\r\nimport ProductDetail from './detail';\r\nimport ProductAddUpdate from './addUpdate';\r\nimport './product.less'\r\nexport default class Product extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path='/product' component={ProductHome} exact></Route>\r\n                <Route path='/product/addupdate' component={ProductAddUpdate}></Route>\r\n                <Route path='/product/detail' component={ProductDetail}></Route>\r\n                <Redirect to='/product'></Redirect>\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Select } from 'antd'\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\nexport default class UserForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.UserForm = React.createRef()\r\n    }\r\n    shouldComponentUpdate(nextProps){\r\n        const {user} = nextProps\r\n        const {username,email,phone,role_id} = user\r\n        this.UserForm.current.setFieldsValue({\r\n            username,email,phone,role_id\r\n        })\r\n        return true\r\n    }\r\n    componentDidMount() {\r\n        const { setForm } = this.props;\r\n        setForm(this.UserForm.current)\r\n    }\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 4 },  // 左侧label的宽度\r\n            wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n        }\r\n        const { roles, user } = this.props\r\n        const {username,email,phone,role_id} = user\r\n        return (\r\n            <Form\r\n                {...formItemLayout}\r\n                ref={this.UserForm}\r\n                initialValues = {{\r\n                    username,email,phone,role_id\r\n                }}\r\n            >\r\n                <Item label='用户名' name='username'>\r\n                    <Input placeholder='请输入用户名'></Input>\r\n                </Item>\r\n                {\r\n                    user._id ? null :\r\n                    <Item label='密码' name='password'>\r\n                        <Input.Password placeholder='请输入密码' visibilityToggle={false} >\r\n                        </Input.Password>\r\n                    </Item>\r\n                }\r\n                <Item label='手机号' name='phone'>\r\n                    <Input placeholder='请输入手机号'></Input>\r\n                </Item>\r\n                <Item label='邮箱' name='email'>\r\n                    <Input placeholder='请输入邮箱'></Input>\r\n                </Item>\r\n                <Item label='角色' name='role_id'>\r\n                    <Select>\r\n                        {\r\n                            roles.map((element) => {\r\n                                return (\r\n                                    <Option value={element._id} key={element._id}>{element.name}</Option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Table, Modal,message } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport LinkButton from '../../components/linkButton/linkButton';\r\nimport UserForm from './UserForm';\r\nimport { reqGetUsers,reqDeleteUser,reqAddUser,reqUpdateUser } from '../../api';\r\nimport formateDate from '../../utils/dateUtils'\r\nexport default class User extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            users: [],\r\n            roles: [],\r\n            isShow: false\r\n\r\n        }\r\n    }\r\n    getUsers = async () => {\r\n        const result = await reqGetUsers();\r\n        if (result.status === 0) {\r\n            //console.log(result)\r\n            this.setState({ users: result.data.users, roles: result.data.roles })\r\n            this.initRolesIdToName()\r\n        }\r\n    }\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone'\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                render:create_time =>formateDate(create_time)\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role_id',\r\n                render: (role_id) => {\r\n                    //console.log(this)\r\n                    //console.log(this.rolesIdToName)\r\n                    // console.log('rolesIdToName' in this)\r\n                    return this.state.roles.find(element => element._id === role_id).name\r\n                    //return this.rolesIdToName[role_id]\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (user) => (\r\n                    <span>\r\n                        <LinkButton onClick={()=>this.showUpdate(user)}>修改</LinkButton>\r\n                        <LinkButton onClick={()=>this.deleteUser(user)}>删除</LinkButton>\r\n                    </span>\r\n                )\r\n            }\r\n        ]\r\n    }\r\n    deleteUser = (user) => {\r\n        Modal.confirm({\r\n            title: 'Confirm',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: `确定删除${user.username}吗`,\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk:async ()=>{\r\n                const result = await reqDeleteUser(user._id);\r\n                if(result.status === 0)\r\n                message.success(`成功删除${user.username}`)\r\n                this.getUsers()\r\n            }\r\n        });\r\n    }\r\n    showAdd = () => {\r\n        this.user = {}\r\n        this.setState({isShow:true})\r\n    }\r\n    showUpdate = (user) => {\r\n        this.user = user\r\n        this.setState({isShow:true})\r\n    }\r\n    addOrUpdateUser = async () => {\r\n        //console.log(this.form)\r\n        if(this.user._id){\r\n            const user  = this.form.getFieldsValue(true);\r\n          //  console.log(user)\r\n            user._id = this.user._id;\r\n            const result = await reqUpdateUser(user);\r\n          //  console.log(result)\r\n            if(result.status === 0){\r\n                message.success('修改用户成功')\r\n            }\r\n        }else{\r\n           // console.log(this.form)\r\n            const user  = this.form.getFieldsValue(true)\r\n           // console.log(user)\r\n            const result = await reqAddUser(user)\r\n            if(result.status === 0){\r\n                message.success('添加用户成功')\r\n            }\r\n        }\r\n        this.getUsers()\r\n        //this.form.resetFields()\r\n        this.setState({isShow:false})\r\n    }\r\n    //根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n    initRolesIdToName = () => {\r\n        // console.log(this.state.roles)\r\n        this.rolesIdToName = this.state.roles.reduce((acc, cur) => {\r\n            //console.log(acc,cur)\r\n            acc[cur._id] = cur.name\r\n            return acc\r\n        }, {})\r\n        //console.log(this.rolesIdToName)\r\n    }\r\n    componentDidMount() {\r\n        this.getUsers()\r\n        //console.log(this.state)\r\n        //this.initRolesIdToName()\r\n        this.initColumns()\r\n    }\r\n    render() {\r\n        const { users, isShow,roles } = this.state\r\n        const user = this.user || {}\r\n        const title = <Button type='primary' onClick={this.showAdd}>创建用户</Button>\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordere\r\n                    rowKey='_id'   //指定每一行的id\r\n                    dataSource={users}\r\n                    columns={this.columns}\r\n                    pagination={{ defaultPageSize: 3 }}\r\n                ></Table>\r\n                <Modal\r\n                    title={user._id?'修改用户':'创建用户'}\r\n                    visible={isShow}\r\n                     onOk={this.addOrUpdateUser} \r\n                    onCancel={() => {\r\n                        this.setState({ isShow: false, })\r\n                       //this.form.resetFields()\r\n                    }}>\r\n                    <UserForm roles={roles} user={{...this.user}} setForm={ form => this.form = form }></UserForm>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Input } from 'antd';\r\nexport default class AddForm extends Component {\r\n    static propTypes = {\r\n        setForm:PropTypes.func.isRequired\r\n    }\r\n    constructor(props){\r\n        super(props)\r\n        this.addForm = React.createRef()\r\n        //console.log('construnctor add')\r\n        \r\n    }\r\n    componentDidMount(){\r\n      //  console.log('didmount add')\r\n     // console.log(this.props,this.addForm)\r\n      this.props.setForm(this.addForm.current)\r\n    }\r\n    render() {\r\n        \r\n       // console.log('render add')\r\n        return (\r\n            <Form ref={this.addForm}>\r\n                <Form.Item \r\n                    label='角色名称'\r\n                    wrapperCol={{span:16}}\r\n                    name='roleName'\r\n                    rules ={[\r\n                        { required: true, whitespace: true, message: '必须输入角色名称' }\r\n                    ]}\r\n                > \r\n                    <Input placeholder='请输入角色名称'>\r\n                    </Input>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Tree } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport menuList from '../../config/menuConfig'\r\n//定义递归\r\nconst menuListToTreeDate = (menuList) => {\r\n    return menuList.map(element=>{\r\n        if(element.children){\r\n            return {\r\n                title:element.title,\r\n                key:element.key,\r\n                children:menuListToTreeDate(element.children)\r\n            }\r\n        }else{\r\n            return {\r\n                title:element.title,\r\n                key:element.key\r\n            }\r\n        }\r\n    })\r\n}\r\nconst treeData = [{\r\n    title:'平台权限',\r\n    key:'00',\r\n    children:[]\r\n}]\r\ntreeData[0].children = menuListToTreeDate(menuList);\r\n//const treeData = menuListToTreeDate(menuList);\r\n//console.log(treeData)\r\nexport default class SetAuthForm extends Component {\r\n    static propTypes = {\r\n        role: PropTypes.object\r\n    }\r\n    constructor(props){\r\n        super(props)\r\n        const {role} = props;\r\n        this.state = {\r\n            checkedKeys:role.menus  //储存被选中的权限key值\r\n        } \r\n    }\r\n    onCheck = (checkedKeys) => {\r\n        this.setState({checkedKeys})\r\n    }\r\n    getMenus = () => this.state.checkedKeys\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        const {role} = nextProps;\r\n        //console.log(role.menus)\r\n        //this.setState({checkedKeys:role.menus})\r\n        this.state.checkedKeys = role.menus;\r\n        return true\r\n    }\r\n\r\n\r\n    render() {\r\n        const { role } = this.props\r\n        const {checkedKeys} = this.state\r\n        return (\r\n            <div>\r\n                <Form.Item\r\n                    label='角色名称'\r\n                    labelCol={{ span: 4 }} // 左侧label的宽度\r\n                    wrapperCol={{ span: 15 }} // 右侧包裹的宽度\r\n                >\r\n                    <Input disabled value={role.name} ></Input>\r\n                </Form.Item>\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll\r\n                   /*  defaultExpandedKeys={['0-0-0', '0-0-1']}\r\n                    defaultSelectedKeys={['0-0-0', '0-0-1']}\r\n                    defaultCheckedKeys={['0-0-0', '0-0-1']}\r\n                    onSelect={this.onSelect}\r\n                    onCheck={this.onCheck} */\r\n                    checkedKeys={checkedKeys}\r\n                    treeData={treeData}\r\n                    onCheck={this.onCheck}\r\n                >\r\n                </Tree>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport { reqGetRoles, reqAddRole, reqUpdateRole } from '../../api'\r\nimport AddForm from './AddForm';\r\nimport SetAuthForm from './SetAuthForm';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport formateDate from '../../utils/dateUtils'\r\nexport default class Role extends Component {\r\n    //构造器中无法调用组件的方法\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showAdd: false,\r\n            showSetAuth: false,\r\n            roles: [], //所有角色\r\n            selectedRole: {} //选中的对象\r\n            //#region\r\n            /* \r\n            roles结构\r\n              [{ \"menus\": [\r\n                    \"/home\",\r\n                    \"/products\",\r\n                    \"/category\",\r\n                    \"/product\",\r\n                    \"/role\"\r\n                ],\r\n                \"_id\": \"5ca9eac0b49ef916541160d5\",\r\n                \"name\": \"角色1\",\r\n                \"create_time\": 1554639552758,\r\n                \"__v\": 0,\r\n                \"auth_time\": 1557630307021,\r\n                \"auth_name\": \"admin\"}]\r\n            */\r\n            //#endregion\r\n        }\r\n        this.columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n                render: create_time => formateDate(create_time)\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'auth_time',\r\n                render: auth_time => formateDate(auth_time)\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'auth_name',\r\n            }\r\n        ];\r\n        //创建ref容器储存【设置权限】组件\r\n        this.setAuthForm = React.createRef()\r\n    }\r\n    showAddModal = () => {\r\n        this.setState({ showAdd: !this.state.showAdd })\r\n    }\r\n    addRole = async () => {\r\n        this.addForm.validateFields().then(async values => {\r\n            // console.log(values)\r\n            const { roleName } = values;\r\n            const result = await reqAddRole(roleName);\r\n            if (result.status === 0) {\r\n                this.getRoles()\r\n                message.success('添加角色成功')\r\n            }\r\n            this.addForm.resetFields()\r\n            this.setState({ showAdd: false });\r\n        })\r\n    }\r\n    handleCancel = () => {\r\n        this.addForm.resetFields()\r\n        this.setState({ showAdd: false })\r\n\r\n    }\r\n    showSetAuthModal = () => {\r\n        this.setState({ showSetAuth: true })\r\n    }\r\n    setAuth = async () => {\r\n        const role = this.state.selectedRole\r\n        const menus = this.setAuthForm.current.getMenus();\r\n        role.menus = menus\r\n        //指定授权人\r\n        role.auth_name = memoryUtils.user.username;\r\n        const result = await reqUpdateRole(role);\r\n        if (result.status === 0) {\r\n            message.success('更新角色成功')\r\n            //如果当前更新的是自己角色的权限 则强制退出\r\n            if (memoryUtils.user.role_id === role._id) {\r\n               // message.warning('当前角色权限改变，强制退出');\r\n                storageUtils.removeUser()\r\n                memoryUtils.user = {}\r\n                this.props.history.replace('/login')\r\n                \r\n            } else {\r\n                //对象role时roles数组的一个元素  当role的值改变时，roles也随之变化\r\n                //即【变量role】保存的地址和【roles数组】中保存的地址指向相同的对象\r\n                this.setState({ showSetAuth: false, role: [...this.state.roles] })\r\n            }\r\n\r\n        }\r\n    }\r\n    onRow = (role) => {\r\n        //role为触发事件的表格行对象\r\n        return {\r\n            //event为事件对象\r\n            onClick: event => {\r\n                this.setState({ selectedRole: role })\r\n            },\r\n        }\r\n    }\r\n    getRoles = async () => {\r\n        const result = await reqGetRoles();\r\n        if (result.status === 0) {\r\n            this.setState({ roles: result.data })\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getRoles()\r\n\r\n    }\r\n    render() {\r\n        const { roles, selectedRole, showAdd, showSetAuth } = this.state\r\n        const title = (\r\n            <span>\r\n                <Button type='primary' style={{ marginRight: 10 }} onClick={this.showAddModal}>创建角色</Button>\r\n                <Button type='primary' disabled={!selectedRole._id} onClick={this.showSetAuthModal}>设置角色权限</Button>\r\n            </span>\r\n        )\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    onRow={this.onRow}\r\n                    bordere\r\n                    rowKey='_id'   //指定每一行的id\r\n                    rowSelection={{\r\n                        type: \"radio\",\r\n                        selectedRowKeys: [selectedRole._id], //根据每一行的id指定被选中的行\r\n                        onSelect: (record) => {\r\n                            this.setState({ selectedRole: record })\r\n                        }//点击选择小圆圈的回调，record表示被点击的行对象 这一回调可以实现点击圆圈选中行的功能\r\n                    }}\r\n                    dataSource={roles}\r\n                    columns={this.columns}\r\n                    pagination={{ defaultPageSize: 3 }}\r\n                ></Table>\r\n                <Modal title='添加角色' visible={showAdd} onOk={this.addRole} onCancel={this.handleCancel}>\r\n                    <AddForm setForm={form => this.addForm = form} />\r\n                </Modal>\r\n                <Modal title='设置权限' visible={showSetAuth} onOk={this.setAuth}\r\n                    onCancel={() => {\r\n                        this.setState({ showSetAuth: false, })\r\n                    }}>\r\n                    <SetAuthForm role={selectedRole} ref={this.setAuthForm} />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n    state = {\r\n        sales:[20, 20, 36, 10, 10, 20],\r\n        stores:[40, 15, 50, 33, 10, 20]\r\n    }\r\n    update = () => {\r\n        this.setState(state=>{\r\n            const sales = state.sales.map(element=>element+1);\r\n            const stores = state.stores.map(element => element-1);\r\n            return {sales,stores}\r\n        })\r\n    }\r\n    getOptions = () => {\r\n        return  {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量','库存']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: this.state.sales,\r\n                showBackground:true,\r\n                backgroundStyle:{\r\n                    color :'rgba(180, 180, 180, 0.2)'\r\n                }\r\n            },{\r\n                name: '库存',\r\n                type: 'bar',\r\n                data: this.state.stores,\r\n                color:'red',\r\n                showBackground:true,\r\n                backgroundStyle:{\r\n                    color :'rgba(180, 180, 180, 0.2)'\r\n                }\r\n            }]\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>更新</Button>\r\n                </Card>\r\n\r\n                <Card title='柱状图一'>\r\n                    <ReactEcharts option={this.getOptions()}></ReactEcharts>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n    state = {\r\n        sales:[20, 20, 36, 10, 10, 20],\r\n        stores:[40, 15, 50, 33, 10, 20]\r\n    }\r\n    update = () => {\r\n        this.setState(state=>{\r\n            const sales = state.sales.map(element=>element+1);\r\n            const stores = state.stores.map(element => element-1);\r\n            return {sales,stores}\r\n        })\r\n    }\r\n    getOptions = () => {\r\n        return  {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量','库存']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'line',\r\n                data: this.state.sales,\r\n                showBackground:true,\r\n                backgroundStyle:{\r\n                    color :'rgba(180, 180, 180, 0.2)'\r\n                }\r\n            },{\r\n                name: '库存',\r\n                type: 'line',\r\n                data: this.state.stores,\r\n                color:'red',\r\n                showBackground:true,\r\n                backgroundStyle:{\r\n                    color :'rgba(180, 180, 180, 0.2)'\r\n                }\r\n            }]\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>更新</Button>\r\n                </Card>\r\n\r\n                <Card title='柱状图一'>\r\n                    <ReactEcharts option={this.getOptions()}></ReactEcharts>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n    state = {\r\n        sales:[20, 20, 36, 10, 10, 20],\r\n        stores:[40, 15, 50, 33, 10, 20]\r\n    }\r\n    update = () => {\r\n        this.setState(state=>{\r\n            const sales = state.sales.map(element=>element+1);\r\n            const stores = state.stores.map(element => element-1);\r\n            return {sales,stores}\r\n        })\r\n    }\r\n    getOptions = () => {\r\n        return  {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量','库存']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'pie',\r\n                data: this.state.sales,\r\n                showBackground:true,\r\n                backgroundStyle:{\r\n                    color :'rgba(180, 180, 180, 0.2)'\r\n                }\r\n            },{\r\n                name: '库存',\r\n                type: 'pie',\r\n                data: this.state.stores,\r\n                color:'red',\r\n                showBackground:true,\r\n                backgroundStyle:{\r\n                    color :'rgba(180, 180, 180, 0.2)'\r\n                }\r\n            }]\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>更新</Button>\r\n                </Card>\r\n\r\n                <Card title='柱状图一'>\r\n                    <ReactEcharts option={this.getOptions()}></ReactEcharts>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './NotFound.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Redirect, Switch, Route } from 'react-router-dom'\r\nimport { Layout } from 'antd';\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport Header from '../../components/header/header';\r\nimport LeftNav from '../../components/left-nav/left-nav';\r\n//引入二级路由组件\r\nimport Home from '../home/home'\r\nimport Category from '../category/category';\r\nimport Product from '../product/product';\r\nimport User from '../user/user';\r\nimport Role from '../role/role'\r\nimport Bar from '../charts/bar';\r\nimport Line from '../charts/line';\r\nimport Pie from '../charts/pie'\r\nimport NotFound from '../notfound/NotFound';\r\nconst { Footer, Sider, Content } = Layout;\r\nexport default class Admin extends Component {\r\n    render() {\r\n        const { user } = memoryUtils\r\n        if (!user || !user._id) {\r\n            return (\r\n                <Redirect to='/login'></Redirect>\r\n            )\r\n        }\r\n        return (\r\n            //指定minHeight后就 当子元素高度比自身大时 就会被撑开\r\n            <Layout style={{ minHeight: '100%' }}>\r\n                <Sider>\r\n                    <LeftNav />\r\n                </Sider>\r\n                <Layout>\r\n                    <Header>Header</Header>\r\n                    <Content style={{ background: '#fff',margin:'20px'}}>\r\n                        <Switch>\r\n                            {/* exact必须写 否则所有路径都有指定到home */}\r\n                            <Redirect  exact from='/' to='/home' /> \r\n                            <Route path='/home' component={Home} />\r\n                            <Route path='/category' component={Category} />\r\n                            <Route path='/product' component={Product} />\r\n                            <Route path='/role' component={Role} />\r\n                            <Route path='/user' component={User} />\r\n                            <Route path='/charts/bar' component={Bar} />\r\n                            <Route path='/charts/line' component={Line} />\r\n                            <Route path='/charts/pie' component={Pie} />\r\n                            <Route component={NotFound}/> \r\n                           {/*  <Redirect\r\n                                to={{\r\n                                    pathname: \"/home\",\r\n                                    state: { referrer: '/home'}\r\n                                }}\r\n                            /> */}\r\n\r\n                        </Switch>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center', color: '#AAA' }}>\r\n                        推荐使用谷歌浏览器,可以获得最佳页面操作体验\r\n                    </Footer>\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter, Route,Switch } from 'react-router-dom'\r\nimport './App.less'\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\nexport default class App extends Component {\r\n  render() {\r\n    console.log('app')\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport memoryUntils from './utils/memoryUtils'\r\nimport storageUtils from './utils/storageUtils'\r\n//用于记住登录状态 \r\n//刷新页面或者关闭浏览器后重启依然保持登录状态\r\nmemoryUntils.user = storageUtils.getUser()\r\nconsole.log('index')\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}